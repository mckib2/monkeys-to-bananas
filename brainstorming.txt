game-server {
  constructor() {
    this.users = []
    this.games = []
    this.maxPlayers = 6
  }
}

index.html {
  ask for userName
  wait for signin
}

signin.html {
  if (signin.userName exists in this.users) {
    show modal error "That username already being used"
      on modal exit
        redirect to index.html
  }
  else {
    newUser = new User(
      "userName": signin.username,
      "startTime": time.now,
      "gameId": 0,
      "gameRoll": "" // owner | player
    )
    this.users.push(newUser)

    redirect to gameDecide.html
  }
}

gameDecide.html {
  if (user is NOT logged in) {
    redirect to index.html
  }
  else {
    if (user is already part of a game) {
      redirect to ?????????
    }
    else {
      show button "Create a game?" {
        on click redirect to gameCreate.html
      }
      show button "Join an existing game?" {
        on click redirect to gameJoin.html
      }
    }
  }
}

gameCreate.html {
  if (user is NOT logged in) {
    redirect to index.html
  }
  else {
    if (user is already part of a game) {
      redirect to ?????????
    }
    else {
      newGame = new Game(
        "gameCode": "",
        "gameOwner": user.userName,
        "gameCreated": time.now,
        "gameStarted": false,
        "gamePlayers": [
          {
            "playerName": user.userName,
            "playerHand": [],
          }
        ]
        "gameGreenDeck": [
          // randomized order of cards
          {
            "cardId": #,
            "cardText": "blah blah"
          }
        ]
        "gameRedDeck": [
          // randomized order of cards
          {
            "cardId": #,
            "cardText": "blah blah"
          }
        ]
      )

      gameCodeValid = false
      while (!gameCodeValid) {
        get a newGameCode (word) from the user
        if (newGameCode does not exist in this.games) {
          gameCodeValid = true
        }
      }

      newGame.gameCode = newGameCode
      this.games.push(newGame)
      redirect to gameOwnerWait.html
    }
  }
}

gameOwnerWait.html {
  if (user is NOT logged in) {
    redirect to index.html
  }
  else {
    if (user is NOT part of a game) {
      redirect to gameDecide.html
    }
    else {
      if (user is NOT their game owner) {
        redirect to gameJoin.html
      }
      else {
        if (game has started) {
          redirect to ????????
        }
        else {
          updateLoop (every 10 seconds) {
            gameJoiners = this.users.select(* WHERE user.gameId = this gameId)
            if (gameJoiners.length > 1) {
              show button "Start Game" {
                onClick = redirect to gameTurn.html
              }
            }

            show button "Cancel Game" {
              onClick = {
                remove this game from this.games
                user.gameId = 0
                user.gameRoll = ""
                redirect to gameDecide.html
              }
            }
          }
        }
      }
    }
  }
}

gameJoin.html {
  // This is for signed-in users who want to enter a game code for a game to join
}
